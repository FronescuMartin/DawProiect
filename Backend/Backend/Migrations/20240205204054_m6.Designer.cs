// <auto-generated />
using System;
using Backend.ContextModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(BackendContext))]
    [Migration("20240205204054_m6")]
    partial class m6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Entities.Competitie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oras")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Competitie");
                });

            modelBuilder.Entity("Backend.Entities.ContWCA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data_crearii")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersoanaId")
                        .HasColumnType("int");

                    b.Property<string>("Wca_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersoanaId")
                        .IsUnique();

                    b.ToTable("ContWCA");
                });

            modelBuilder.Entity("Backend.Entities.Persoana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data_nasterii")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaraId");

                    b.ToTable("Persoana");
                });

            modelBuilder.Entity("Backend.Entities.Rezultat", b =>
                {
                    b.Property<int>("PersoanaId")
                        .HasColumnType("int");

                    b.Property<int>("CompetitieId")
                        .HasColumnType("int");

                    b.Property<double>("Average")
                        .HasColumnType("float");

                    b.Property<int>("Pozitie")
                        .HasColumnType("int");

                    b.Property<string>("Proba")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Single")
                        .HasColumnType("float");

                    b.Property<double>("Timp1")
                        .HasColumnType("float");

                    b.Property<double>("Timp2")
                        .HasColumnType("float");

                    b.Property<double>("Timp3")
                        .HasColumnType("float");

                    b.Property<double>("Timp4")
                        .HasColumnType("float");

                    b.Property<double>("Timp5")
                        .HasColumnType("float");

                    b.HasKey("PersoanaId", "CompetitieId");

                    b.HasIndex("CompetitieId");

                    b.ToTable("Rezultat");
                });

            modelBuilder.Entity("Backend.Entities.Tara", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Continent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iso2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tara");
                });

            modelBuilder.Entity("Backend.Entities.ContWCA", b =>
                {
                    b.HasOne("Backend.Entities.Persoana", "Persoana")
                        .WithOne("ContWCA")
                        .HasForeignKey("Backend.Entities.ContWCA", "PersoanaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persoana");
                });

            modelBuilder.Entity("Backend.Entities.Persoana", b =>
                {
                    b.HasOne("Backend.Entities.Tara", "Tara")
                        .WithMany("Persoane")
                        .HasForeignKey("TaraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tara");
                });

            modelBuilder.Entity("Backend.Entities.Rezultat", b =>
                {
                    b.HasOne("Backend.Entities.Competitie", "Competitie")
                        .WithMany("Rezultate")
                        .HasForeignKey("CompetitieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Entities.Persoana", "Persoana")
                        .WithMany("Rezultate")
                        .HasForeignKey("PersoanaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competitie");

                    b.Navigation("Persoana");
                });

            modelBuilder.Entity("Backend.Entities.Competitie", b =>
                {
                    b.Navigation("Rezultate");
                });

            modelBuilder.Entity("Backend.Entities.Persoana", b =>
                {
                    b.Navigation("ContWCA")
                        .IsRequired();

                    b.Navigation("Rezultate");
                });

            modelBuilder.Entity("Backend.Entities.Tara", b =>
                {
                    b.Navigation("Persoane");
                });
#pragma warning restore 612, 618
        }
    }
}
